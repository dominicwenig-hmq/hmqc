apiVersion: hivemq.com/v1
kind: HiveMQCluster
metadata:
  name: hivemq-c
spec:  
  imagePullSecrets: 
  - hivemq-pull-secret
  hivemqVersion: k8s-4.9.1
  nodeCount: 2
  cpu: '2'
  memory: '2G'
  logLevel: INFO
  #controllerTemplate: cluster-deployment.yaml
  controllerTemplate: cluster-stateful-set.yaml
  operatorHints:
    statefulSet: 
      surgeNode: true
      surgeNodeCleanupPvc: true
  env:
  - name: AUTH_EXT_BASIC_AUTH_ID
    valueFrom:
      secretKeyRef:
        name: auth-secret
        key: AUTH_EXT_BASIC_AUTH_ID
  - name: AUTH_EXT_BASIC_AUTH_SECRET
    valueFrom:
      secretKeyRef:
        name: auth-secret
        key: AUTH_EXT_BASIC_AUTH_SECRET
  - name: CLUSTER_KEYSTORE_PASS
    valueFrom:
      secretKeyRef:
        name: hivemq-cluster-tls-secrets
        key: KEYSTORE_PASS
  - name: CLUSTER_TRUSTSTORE_PASS
    valueFrom:
      secretKeyRef:
        name: hivemq-cluster-tls-secrets
        key: TRUSTSTORE_PASS
  extensions:
  - configMap: kafka-ext-conf
    enabled: false
    extensionUri: preinstalled
    name: hivemq-kafka-extension
  - configMap: ese-ext-conf
    enabled: true
    extensionUri: preinstalled
    name: hivemq-enterprise-security-extension
    initialization: |
      [[ -e /conf-override/extensions/hivemq-enterprise-security-extension/permissions_client_cert.xml ]] &&
      rm -f $(pwd)/permissions_client_cert.xml &&
      cp -s /conf-override/extensions/hivemq-enterprise-security-extension/permissions_client_cert.xml $(pwd)/permissions_client_cert.xml

      [[ -e /conf-override/extensions/hivemq-enterprise-security-extension/enterprise-security-extension.xml ]] &&
      rm -f $(pwd)/conf/enterprise-security-extension.xml &&
      cp -s /conf-override/extensions/hivemq-enterprise-security-extension/enterprise-security-extension.xml $(pwd)/conf/enterprise-security-extension.xml
  - configMap: auth-ext-conf
    enabled: true
    extensionUri: https://github.com/dominicwenig-hmq/hmqc/releases/download/1.0.1/auth-extension.zip
    name: auth-extension
  #configMaps:
  #- name: hivemq-license
  #  path: /opt/hivemq/license
  configMaps:
  - name: logback
    path: /opt/hivemq/conf
  secrets:
  - name: hivemq-license
    path: /opt/hivemq/license
  - name: hivemq-jks
    path: /opt/hivemq/certs
  ports:
  - name: "mqtt"
    port: 1883
    expose: true
    patch:
    - '[{"op":"add","path":"/spec/selector/hivemq.com~1node-offline","value":"false"},{"op":"add","path":"/metadata/annotations","value":{"service.spec.externalTrafficPolicy":"Local"}}]'
    #- '[{"op":"add","path":"/spec/type","value":"LoadBalancer"}]'
  - name: "mqtts-pub"
    port: 8883
    expose: true
    patch:
    - '[{"op":"add","path":"/spec/selector/hivemq.com~1node-offline","value":"false"},{"op":"add","path":"/metadata/annotations","value":{"service.spec.externalTrafficPolicy":"Local"}}]'
    #- '[{"op":"add","path":"/spec/type","value":"LoadBalancer"}]'
  - name: "mqtts-int"
    port: 8884
    expose: true
    patch:
    - '[{"op":"add","path":"/spec/selector/hivemq.com~1node-offline","value":"false"},{"op":"add","path":"/metadata/annotations","value":{"service.spec.externalTrafficPolicy":"Local"}}]'
    #- '[{"op":"add","path":"/spec/type","value":"LoadBalancer"}]'
  - name: "cc"
    port: 8080
    expose: true
    patch:
    - '[{"op":"add","path":"/spec/sessionAffinity","value":"ClientIP"}]'
  - name: "api"
    port: 8888
    expose: true
    patch:
    - '[{"op":"add","path":"/spec/sessionAffinity","value":"ClientIP"}]'
  listenerConfiguration: >
    <tcp-listener>
      <port>${HIVEMQ_MQTT_PORT}</port>
      <bind-address>0.0.0.0</bind-address>
    </tcp-listener>
    <tls-tcp-listener>
        <name>mqtts-pub</name>
        <port>8883</port>
        <bind-address>0.0.0.0</bind-address>
        <tls>
            <keystore>
                <path>/opt/hivemq/certs/keystore.jks</path>
                <password>${ENV:CLUSTER_KEYSTORE_PASS}</password>
                <private-key-password>${ENV:CLUSTER_KEYSTORE_PASS}</private-key-password>
            </keystore>
        </tls>
    </tls-tcp-listener>
    <tls-tcp-listener>
        <name>mqtts-int</name>
        <port>8884</port>
        <bind-address>0.0.0.0</bind-address>
        <tls>
            <keystore>
                <path>/opt/hivemq/certs/keystore.jks</path>
                <password>${ENV:CLUSTER_KEYSTORE_PASS}</password>
                <private-key-password>${ENV:CLUSTER_KEYSTORE_PASS}</private-key-password>
            </keystore>
            <client-authentication-mode>REQUIRED</client-authentication-mode>
            <truststore>
              <path>/opt/hivemq/certs/truststore.jks</path>
              <password>${ENV:CLUSTER_TRUSTSTORE_PASS}</password>
            </truststore>            
        </tls>
    </tls-tcp-listener>
  mqtt:
    queuedMessagesMaxQueueSize: 2000
  configOverride: |
    <?xml version="1.0"?>
    <hivemq xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:noNamespaceSchemaLocation="hivemq-config.xsd">
        <listeners>
            --LISTENER-CONFIGURATION--
        </listeners>
        <control-center>
            <listeners>
                <http>
                    <port>${HIVEMQ_CONTROL_CENTER_PORT}</port>
                    <bind-address>0.0.0.0</bind-address>
                </http>
            </listeners>
        </control-center>

        <!--REST-API-CONFIGURATION-->
        <cluster>
            <enabled>true</enabled>
            <transport>
                <tcp>
                    <bind-address>${HIVEMQ_BIND_ADDRESS}</bind-address>
                    <bind-port>${HIVEMQ_CLUSTER_PORT}</bind-port>
                    <enabled>true</enabled>
                </tcp>
            </transport>
            <discovery>
                <extension>
                    <reload-interval>${HIVEMQ_DNS_DISCOVERY_INTERVAL}</reload-interval>
                </extension>
            </discovery>

            <replication>
                <replica-count>${HIVEMQ_CLUSTER_REPLICA_COUNT}</replica-count>
            </replication>

            <failure-detection>
                <tcp-health-check>
                    <enabled>true</enabled>
                    <bind-address>${HIVEMQ_BIND_ADDRESS}</bind-address>
                    <bind-port>9000</bind-port>
                    <port-range>50</port-range>
                </tcp-health-check>

                <heartbeat>
                    <enabled>true</enabled>
                    <interval>4000</interval>
                    <timeout>30000</timeout>
                </heartbeat>
            </failure-detection>

        </cluster>
        <overload-protection>
            <enabled>${HIVEMQ_CLUSTER_OVERLOAD_PROTECTION}</enabled>
        </overload-protection>
        <restrictions>
            <max-client-id-length>${HIVEMQ_MAX_CLIENT_ID_LENGTH}</max-client-id-length>
            <max-topic-length>${HIVEMQ_MAX_TOPIC_LENGTH}</max-topic-length>
            <max-connections>-${HIVEMQ_MAX_CONNECTIONS}</max-connections>
            <incoming-bandwidth-throttling>${HIVEMQ_INCOMING_BANDWIDTH_THROTTLING}</incoming-bandwidth-throttling>
            <no-connect-idle-timeout>${HIVEMQ_NO_CONNECT_IDLE_TIMEOUT}</no-connect-idle-timeout>
        </restrictions>
        <mqtt>
            <session-expiry>
                <max-interval>${HIVEMQ_SESSION_EXPIRY_INTERVAL}</max-interval>
            </session-expiry>

            <message-expiry>
                <max-interval>${HIVEMQ_MESSAGE_EXPIRY_MAX_INTERVAL}</max-interval>
            </message-expiry>

            <packets>
                <max-packet-size>${HIVEMQ_MAX_PACKET_SIZE}</max-packet-size>
            </packets>

            <receive-maximum>
                <server-receive-maximum>${HIVEMQ_SERVER_RECEIVE_MAXIMUM}</server-receive-maximum>
            </receive-maximum>

            <keep-alive>
                <max-keep-alive>${HIVEMQ_KEEPALIVE_MAX}</max-keep-alive>
                <allow-unlimited>${HIVEMQ_KEEPALIVE_ALLOW_UNLIMITED}</allow-unlimited>
            </keep-alive>

            <topic-alias>
                <enabled>${HIVEMQ_TOPIC_ALIAS_ENABLED}</enabled>
                <max-per-client>${HIVEMQ_TOPIC_ALIAS_MAX_PER_CLIENT}</max-per-client>
            </topic-alias>

            <subscription-identifier>
                <enabled>${HIVEMQ_SUBSCRIPTION_IDENTIFIER_ENABLED}</enabled>
            </subscription-identifier>

            <wildcard-subscriptions>
                <enabled>${HIVEMQ_WILDCARD_SUBSCRIPTION_ENABLED}</enabled>
            </wildcard-subscriptions>

            <shared-subscriptions>
                <enabled>${HIVEMQ_SHARED_SUBSCRIPTION_ENABLED}</enabled>
            </shared-subscriptions>

            <quality-of-service>
                <max-qos>${HIVEMQ_MAX_QOS}</max-qos>
            </quality-of-service>

            <retained-messages>
                <enabled>${HIVEMQ_RETAINED_MESSAGES_ENABLED}</enabled>
            </retained-messages>

            <queued-messages>
                <max-queue-size>${HIVEMQ_QUEUED_MESSAGE_MAX_QUEUE_SIZE}</max-queue-size>
                <strategy>${HIVEMQ_QUEUED_MESSAGE_STRATEGY}</strategy>
            </queued-messages>
        </mqtt>
        <security>
            <!-- Allows the use of empty client ids -->
            <allow-empty-client-id>
                <enabled>${HIVEMQ_ALLOW_EMPTY_CLIENT_ID}</enabled>
            </allow-empty-client-id>

            <!-- Configures validation for UTF-8 PUBLISH payloads -->
            <payload-format-validation>
                <enabled>${HIVEMQ_PAYLOAD_FORMAT_VALIDATION}</enabled>
            </payload-format-validation>

            <utf8-validation>
                <enabled>${HIVEMQ_TOPIC_FORMAT_VALIDATION}</enabled>
            </utf8-validation>

            <!-- Allows clients to request problem information -->
            <allow-request-problem-information>
                <enabled>${HIVEMQ_ALLOW_REQUEST_PROBLEM_INFORMATION}</enabled>
            </allow-request-problem-information>

            <control-center-audit-log>
                <enabled>${HIVEMQ_CONTROL_CENTER_AUDIT_LOG_ENABLED}</enabled>
            </control-center-audit-log>
        </security>

        <!-- Optional Features-->
        <mqtt-addons>
            <!-- Enable $expired topic -->
            <expired-messages-topic>
                <enabled>true</enabled>
            </expired-messages-topic>

            <!-- Enable $dropped topic -->
            <dropped-messages-topic>
                <enabled>true</enabled>
            </dropped-messages-topic>

            <!-- Enable $dead topic -->
            <dead-messages-topic>
                <enabled>true</enabled>
            </dead-messages-topic>
        </mqtt-addons>

    </hivemq>

  monitoring:
    enablePrometheus: true
